seaJS――模块化(依赖、冲突)

定义模块：
define(function (require, exports, module){
	require		引入别的模块
	exports		输出
		exports.a=12;
	module		批量
		module.exports={};
});

使用模块：
	seajs.use([]||'', function (模块){
	});

-------------------------------------------------------------------------------

预解析、引用、递归、字符编码

-------------------------------------------------------------------------------

创建、插入、删除



宽高：
style.width/style.height		自身、放东西的地方大小
offsetWidth/Height			width+padding+border
clientWidth/Height			可视区大小
scrollWidth/Height			实际、内容高度

位置：
offsetLeft/Top				距离定位的父级
clientX/Y				鼠标的可视区位置(scrollTop/Left)
scrollLeft/Top				滚动距离、可视区本身的位置

-------------------------------------------------------------------------------

getAttribute		获取自定义
setAttribute		配对
removeAttribute

-------------------------------------------------------------------------------

var oEvent=ev||event;

oEvent.clientX/Y
oEvent.srcElement||target
oEvent.keyCode、ctrlKey/altKey/shiftKey
oEvent.fromElement||relatedTarget
	to
oEvent.preventDefault――addEventListener
	return false;
oEvent.cancelBubble――几乎用不上、尽量别用

-------------------------------------------------------------------------------

滚轮――
onmousewheel||DOMMouseScroll
wheelDelta||detail
preventDefault||return false

-------------------------------------------------------------------------------

后面？
ajax、jsonp――数据交互
正则表达式
jQuery
MVC
性能优化
面向对象
HTML5
后台
算法

面试、找工作

-------------------------------------------------------------------------------

ajax――跟服务器通信

ajax特点：无刷新
1.体验好
2.节约流量

-------------------------------------------------------------------------------

缓存――同一个URL只会读一次

-------------------------------------------------------------------------------

0.1^18

0.000000000000000001

0.0000000000931322574615478515625

9313万倍

-------------------------------------------------------------------------------

如果需要去掉缓存：t=random

-------------------------------------------------------------------------------

编码必须一致

-------------------------------------------------------------------------------

'[12, 5, 8]'	=>	[12, 5, 8]

-------------------------------------------------------------------------------

ajax：
1.缓存――random
2.编码――一致
3.解析――都是字符串

-------------------------------------------------------------------------------

1.读取数据		ajax
2.解析、使用数据	其他

-------------------------------------------------------------------------------

ajax - 打电话

打电话：		ajax：
1.弄个电话		1.创建对象
2.拨号			2.连接服务器
3.说话			3.发送请求
4.听听			4.等待响应

-------------------------------------------------------------------------------

1.创建
2.连接
3.发送
4.接收

-------------------------------------------------------------------------------

ActiveX――IE的插件

-------------------------------------------------------------------------------

使用没定义的变量	报错
使用没定义的属性	undefined

-------------------------------------------------------------------------------

GET	走url		不安全、容量小(32K)
POST	不走url		相对安全、容量大(1G)

-------------------------------------------------------------------------------

true
false

异步――一个个来	很多操作一块进行			一堆一块来
同步――一块儿来	操作必须先完成前面的，后面才能开始	一件件来

异步	许多操作一起进行	好
同步	一个个来		不好

结论：都用异步

true-异步
false-同步

-------------------------------------------------------------------------------

0	初始状态――什么都没干
1	已连接
2	发送完成
3	接收完成	服务器响应的头，接收完成
4	接收完成	服务器响应的content，接收完成

-------------------------------------------------------------------------------

if(window.XMLHttpRequest)
{
	var oAjax=new XMLHttpRequest();
}
else
{
	var oAjax=new ActiveXObject('Microsoft.XMLHttp');
}

oAjax.open('get', url, true);

oAjax.send();

oAjax.onreadystatechange=function ()
{
	//1.完成？
	if(oAjax.readyState==4)
	{
		//2.成功？
		oAjax.status->2xx	||	304
		alert(oAjax.responseText);
	}
};

-------------------------------------------------------------------------------

接口：
1.人家让你怎么用，你就怎么用
2.暂时别管怎么实现
3.只有提供接口的东西，才能实现

-------------------------------------------------------------------------------

接口――后台给前台的操作方法
	格式

两个部分：过去的东西，回来的东西

-------------------------------------------------------------------------------

get和post区别：
1.数据放在不同的地方
	GET	url+'?'+str
	POST	send(str)

2.POST比GET多个头
	Content-Type:application/x-www-form-urlencoded

-------------------------------------------------------------------------------

1.接口弄明白，按照他的要求走
2.接收的数据解析，使用数据

-------------------------------------------------------------------------------

ajax――不能跨域

域：域名

baidu.com/a.html	->	google.com/a.txt

-------------------------------------------------------------------------------

1.有些网站有很多个域名
2.第三方登录

*** jsonp――跨域

-------------------------------------------------------------------------------














