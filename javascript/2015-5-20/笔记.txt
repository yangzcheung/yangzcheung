ajax：取数据

接口：过去的、回来的

-------------------------------------------------------------------------------

1.创建
if(window.XMLxxx)
{
}
else
{
	ActiveXObject('')
}

2.连接

oAjax.open('get'/'post', url, true);

oAjax.setRequestHeader('content-type', 'application/x-www-form-urlencoded');

3.发送
oAjax.send(post数据);

4.接收
oAjax.onreadystatechange=function ()
{
	oAjax.readyState==4
	oAjax.status	2xx	304
	oAjax.responseText
};

oAjax.abort();

-------------------------------------------------------------------------------

消息大啊啊[酷][嘻嘻]师德师风[嘻嘻]

消息大啊啊<img src="Images/phiz/ku.gif"><img src="Images/phiz/xixi.gif">师德师风<img src="Images/phiz/xixi.gif">

-------------------------------------------------------------------------------

jsonp：
跨域

-------------------------------------------------------------------------------

1.<img src="" />、<script src="别人网站的JS"></script>
2.script里面直接放代码、引进来――完全一样
3.文件名给人类看的――不论文件名多诡异，不影响

-------------------------------------------------------------------------------

script	一次性的

-------------------------------------------------------------------------------

jsonp：
1.创建script
2.给地址、插进去
3.等着调用准备好的函数

-------------------------------------------------------------------------------

<script>
window.onload=function ()
{
	function show()
	{
		xxx
	}
};
</script>
<script>
show({xxx});
</script>

-------------------------------------------------------------------------------

ajax(url, function (){});

---

function show()
{
}

jsonp(url);

---

jsonp(url, function (){
});

-------------------------------------------------------------------------------

function jsonp(fn)
{
	window.show=fn;
}

window.onload=function ()
{
	jsonp(function (){})
};

-------------------------------------------------------------------------------

var json={a: 12};
alert(json.a);		//12

---

var json={};
json.a=12;
alert(json.a);		//12

-------------------------------------------------------------------------------

jsonp――script放src

-------------------------------------------------------------------------------

http://virtual.paipai.com/extinfo/GetMobileProductInfo?mobile=13548785216&amount=10000&callname=abc

abc({mobile:'13548785216',province:'湖南',isp:'中国移动',stock:'1',amount:'10000',maxprice:'0',minprice:'0',cityname:'长沙'});

-------------------------------------------------------------------------------

token――令牌

-------------------------------------------------------------------------------

www.zhinengshe.com/exercise/im/api.php

1.注册
		?a=reg&user=用户名&pass=密码&face=头像ID&cb=xxx
		{err: 0, msg: "注册成功"}

2.登录
		?a=lgn&user=用户名&pass=密码&cb=xxx
		{err: 0, msg: "登录成功", face: 头像ID, login_time: 上次登录时间, token: "token"}

3.发言
		?a=snd_msg&content=内容&token=&cb=xxx
		{err: 0, time: 发布时间, ID: 消息ID}

4.完整获取
		?a=get_msg&token=&cb=xxx
		{err: 0, data: [{ID: 消息ID, post_time: 消息时间,content: 消息内容,username: 发言用户},...]}

5.退出登录
		?a=logout&token=&cb=xxx
		{err: 0, msg: "成功退出登录"}

6.获取用户列表
		?a=get_user_list&token=&cb=xxx
		{err: 0, data: [{ID: 用户ID,username: 用户名,face: 用户头像}]}

7.获取更新
		?a=get_msg_n&n=消息ID&token=&cb=xxx
		{err: 0, data: [{ID:'1',post_time:'1364873875',content:'asdfsdf',face:'1',username:'test',to:'发给谁'},...]}
		关于消息ID：
			“n=消息ID”指的是：已接收过的消息中，最大的“消息ID”，换句话说：get_msg_n命令，返回的是ID比n大的信息，从而不用获取以前的重复消息


增量更新

手里有1-284
?a=get_msg_n&n=284&token=xxxx&cb=xxx
	服务器返回：285-?

-------------------------------------------------------------------------------

正则表达式――大陆
规则表达式――台湾

blue@126.com		邮箱
张三			名字
192.168.1.1		IP
www.baidu.com		网址
13278185635		手机


blue@126.com
前面英文、数字中间有@，后面也可以是英文、数字，后面还有.com或者.xxx

正则表达式――表达是规则

-------------------------------------------------------------------------------

正则：
1.规则
2.只能处理字符串
3.正则不是必须用的

方便

-------------------------------------------------------------------------------

str.indexOf('字符串');
str.search(re);

-------------------------------------------------------------------------------

简写：
[12, 5, 8]	=>	new Array(12, 5, 8)

-------------------------------------------------------------------------------

search		查找

new RegExp('规则', '选项')
/规则/选项

i	忽略大小写

重复：规则

-------------------------------------------------------------------------------

转义――暗号
	\任意
	就想用\本身，\\

\d	数字

-------------------------------------------------------------------------------

正则：
1.懒
2.蠢
3.贪婪
	正则――会去匹配尽可能长的东西

-------------------------------------------------------------------------------

量词――数量

{数字}

5个人		人{5}

\d{5}	=>	\d\d\d\d\d

---

+	若干

-------------------------------------------------------------------------------

match		返回数组――所有匹配到的
g	匹配所有
+	多个(不知道具体的数)

-------------------------------------------------------------------------------

replace(找谁, 换成谁)

replace('str'||正则, '字符串'||fn);

-------------------------------------------------------------------------------

[???]

\d	数字
.	任意字符

-------------------------------------------------------------------------------

修饰――条件

^	行首――一行的开头
$	行尾――结尾

-------------------------------------------------------------------------------

i	影响：英文字母
g	全部的
m	影响：^$

-------------------------------------------------------------------------------

m	muti-line	多行模式

不加m：
^	行首	整个字符串的开头(整个字符串作为一行处理)

加了m：
^	行首	每一行的开头(整个字符串作为多行处理)

-------------------------------------------------------------------------------

选项：可以多个一起用、顺序完全不重要

-------------------------------------------------------------------------------













