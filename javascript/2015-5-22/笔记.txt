baidu.com
www.baidu.com
http://baidu.com
http://baidu.com/
https://baidu.com/
https://www.baidu.com/
https://www.baidu.com.cn/
https://www.aaa.bbb.ccc.kukahome.baidu.com.cn/

-------------------------------------------------------------------------------

'use strict'

-------------------------------------------------------------------------------

优化――提高性能

-------------------------------------------------------------------------------

1.稳定性――别报错
2.维护性、扩展性
3.优化

-------------------------------------------------------------------------------

优化：
1.网络优化
2.性能优化

-------------------------------------------------------------------------------

网络优化：
1.工具：
F12-Network
YSlow
	先安装FB、在安装YSlow

2.减少HTTP请求					80%
	1.减少请求、处理、接收次数
	1000个小		1个大
	1000请求		1请求
	1000处理		1处理
	1000接收		1接收

	2.减小体积

3.合并――JS、CSS、图片

4.压缩――JS、CSS、HTML、图片
	grunt

5.图片延迟加载				95%以上

6.gzip					50%以上

7.JS阻塞加载――JS加载完成之前，后面的东西得等着

阻塞加载
非阻塞加载――并行加载		很多东西一起加载：图片、CSS、flash、其他


结论：JS文件放在最后面

引入外面的JS――一定放下面

做法：JS放下面，CSS放上面

8.CDN――Content Delivery Network

-------------------------------------------------------------------------------

执行性能：
0.01s
0.00000000000001s

优化=>习惯
1.不用了的东西，赶紧删
2.尽量不要用全局变量
3.尽量用系统函数
4.尽量用正则

方法：
真的有用――
1.DOM操作很慢――3000倍			90%
	运动：看不见――停掉

2.图片――性能很低			很大缓解(手机)
	解决：
	1.少用图片
	2.图片小――尺寸、文件大小
		*尺寸合适――不要缩放
		*平铺――尽量切大点、整数倍

3.变量
全局<局部

a++;		430
window.a++;	86000	200倍


属性<变量――东西越多越慢

window.		会死人的

结论：
1.绝对不要用全局的
2.能用变量，不用属性

知道就完了――
1.arr的length		扯淡

var len=arr.length;
for(var i=0;i<len;i++)

2.str			混蛋

str=str+'aaaadsfasdewrert';	频繁生成字符串
str+='aaaadsfasdewrert';
str+='aaaadsfasdewrert';
str+='aaaadsfasdewrert';
str+='aaaadsfasdewrert';
str+='aaaadsfasdewrert';
str+='aaaadsfasdewrert';

alert(str);

---

var arr=[];

arr.push('aaaadsfasdewrert');	不需要生成新对象
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');
arr.push('aaaadsfasdewrert');

arr.join('');

-------------------------------------------------------------------------------

优化：
网络：
	F12
	YSlow

	合并
	压缩
	JS
执行：
	1.习惯――不要的就删、尽量用系统、正则、不要用全局
	2.DOM操作――运动(看不见就关)
	3.图片――小、别缩放、平铺切大点、看不见删
	4.属性<变量

-------------------------------------------------------------------------------

面向对象――
只要知道怎么用，不用管内部的原理

Date
$('#div1 .box li')
re.test()

面向对象？

写对象的人：	$$$
用对象的人：	舒服

-------------------------------------------------------------------------------

写对象的人














