数据结构 和 算法――
二叉树
散列

笔试――
面试――

-------------------------------------------------------------------------------

18，JavaScript中如何对一个对象进行深度clone
25，请设计一套方案，用于确保页面中JS加载完全。

JS手动加载
1.js、2.js、3.js	_count++;
<script>
if(_count==50)
</script>

1.js	_arr.push('1.js');
2.js	_arr.push('2.js');
3.js	_arr.push('3.js');

if(_arr.length==50)

-------------------------------------------------------------------------------

webQQ

www.zhinengshe.com/exercise/im/api.php

1.注册
		?a=reg&user=用户名&pass=密码&face=头像ID&cb=xxx
		{err: 0, msg: "注册成功"}

2.登录
		?a=lgn&user=用户名&pass=密码&cb=xxx
		{err: 0, msg: "登录成功", face: 头像ID, login_time: 上次登录时间, token: "token"}

3.发言
		?a=snd_msg&content=内容&token=&cb=xxx
		{err: 0, time: 发布时间, ID: 消息ID}

4.完整获取
		?a=get_msg&token=&cb=xxx
		{err: 0, data: [{ID: 消息ID, post_time: 消息时间,content: 消息内容,username: 发言用户},...]}

5.退出登录
		?a=logout&token=&cb=xxx
		{err: 0, msg: "成功退出登录"}

6.获取用户列表
		?a=get_user_list&token=&cb=xxx
		{err: 0, data: [{ID: 用户ID,username: 用户名,face: 用户头像}]}

7.获取更新
		?a=get_msg_n&n=消息ID&token=&cb=xxx
		{err: 0, data: [{ID:'1',post_time:'1364873875',content:'asdfsdf',face:'1',username:'test',to:'发给谁'},...]}
		关于消息ID：
			“n=消息ID”指的是：已接收过的消息中，最大的“消息ID”，换句话说：get_msg_n命令，返回的是ID比n大的信息，从而不用获取以前的重复消息


-------------------------------------------------------------------------------

运动――
弹性――
碰撞

-------------------------------------------------------------------------------

nodeJS

距离大，力越大，加速度越大

距离	加速度
300	6
100	2
50	1
5	0.1

-------------------------------------------------------------------------------

speed+=(300-oDiv.offsetLeft)/50;
speed-=(oDiv.offsetLeft-300)/50;
speed+=-(oDiv.offsetLeft-300)/50;
speed+=(300-oDiv.offsetLeft)/50;

-(a-b)=>(b-a)

-------------------------------------------------------------------------------

obj.style.left=obj.offsetLeft+speed+'px';
obj.style.left=402+0.933333333+'px';	'402.9333333px'->'402px'

202
201.9999999993
202.0000000076

-------------------------------------------------------------------------------

碰撞

left:300.99999px;	->	300px;

oDiv.style.left=oDiv.offsetLeft+0.3+'px';
oDiv.style.left=300+0.3+'px';	'300.3px'	->	'300px'		没动
oDiv.style.left=300-0.3+'px';	'299.7px'	->	'299px'		动了

-------------------------------------------------------------------------------

nodeJS――用JS写后台

1.性能	vs PHP
86倍
	PHP	200台	400万
	nodeJS	3台	6万

	硬件相同
	nodeJS		1s
	PHP		86s

2.前端开发――入门简单
nodeJS & JavaScript

http://nodejs.org/

3.nodeJS跟前台JS非常流畅

传统后台语言――不太方便
PHP	94年
JS	95年

缺点：
缺乏资源――书、教程、视频、源码

PHP & nodeJS

-------------------------------------------------------------------------------

nodeJS――后台

配置nodeJS环境――cmd node

运行：
1.切换盘符	e:
2.进入目录	cd node
3.运行程序	node 文件名

*cls――清屏
*上下箭头――切换命令

-------------------------------------------------------------------------------

前台JS能做：
window、document

nodeJS能做：
1.数据库
2.文件操作

-------------------------------------------------------------------------------

文件操作――

同步――前面没完，后面等着
异步――前面没完，后面开始

服务器――99.9999%都是异步

npm――node package manager

-------------------------------------------------------------------------------

PHP		nodeJS
1.连接		1.连接 & 选择库
2.选择库	2.发送 & 接收
3.发送
4.接收

-------------------------------------------------------------------------------

http://www.baidu.com/

http――协议：规定、约定

-------------------------------------------------------------------------------

端口：门牌号

端口――随便取

80	web
21/22	ftp
110	邮箱

-------------------------------------------------------------------------------

grunt――自动化工具



1.代码压缩














